on:
  workflow_call:
    inputs:
      LANGUAGE:
        required: false
        type: string
        default: "java"
      SNYK_ENABLED:
        required: false
        type: boolean
        default: true
      JAVA_VERSION:
        required: false
        type: string
        default: "14"
      NODE_VERSION:
        required: false
        type: string
        default: "14"
      BUILD_CACHE:
        required: false
        type: string
        default: "gradle"
    secrets:
      NAIS_DEPLOY_APIKEY:
        required: true
      SNYK_TOKEN:
        required: true
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev-gcp
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: snyk/actions/setup@master
      - name: SETUP java
        if: ${{ inputs.LANGUAGE == 'java' }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.JAVA_VERSION }}
          cache: ${{ inputs.BUILD_CACHE }}
      - name: SETUP Node
        if: ${{ inputs.LANGUAGE == 'node' }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: ${{ inputs.BUILD_CACHE }}
      - name: build and test
        run: |
          ./build.sh
      - name: SNYK test
        if: ${{ inputs.SNYK_ENABLED }}
        run: snyk test --org=teampam --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#      - name: pre-deploy
#        uses: navikt/pam-deploy/actions/pre-deploy@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: deploy to dev-gcp
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: naiserator.yml
#          VARS: naiserator-dev.json
#      - name: post-deploy
#        uses: navikt/pam-deploy/actions/post-deploy@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: draft release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.VERSION_TAG }}
#          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
#          body: ${{ env.CHANGE_LOG }}
#          draft: true
#          prerelease: false
