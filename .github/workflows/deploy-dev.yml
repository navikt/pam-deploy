on:
  workflow_call:
    inputs:
      LANGUAGE:
        required: false
        type: string
        default: "java"
      CODEQL_ENABLED:
        required: false
        type: boolean
        default: true
      TEAM:
        required: false
        type: string
        default: "teampam"
      JAVA_DISTRIBUTION:
        required: false
        type: string
        default: "temurin"
      JAVA_VERSION:
        required: false
        type: string
        default: "14"
      NODE_VERSION:
        required: false
        type: string
        default: "14"
      BUILD_CACHE:
        required: false
        type: string
        default: "gradle"
      NAIS_RESOURCE:
        required: false
        type: string
        default: "naiserator.yml"
      NAIS_VARS:
        required: false
        type: string
        default: "naiserator-dev.json"
      CLUSTER:
        required: false
        type: string
        default: "dev-gcp"
      BUILD_SCRIPT:
        required: false
        type: string
        default: "./build.sh"
      WORKING_DIRECTORY:
        required: false
        type: string
        default: "./"
      IMAGE_SUFFIX:
        required: false
        type: string
      SKIP_DRAFT_RELEASE:
        required: false
        type: boolean
        default: false
      DRAFTS_MAX:
        required: false
        type: string
        default: "10"
    secrets:
      SNYK_TOKEN:
        required: false
      OPTIONAL_SECRET:
        required: false
      NAIS_WORKLOAD_IDENTITY_PROVIDER:
        required: true
    outputs:
      image:
        description: "Image from nais build push action"
        value: ${{ jobs.deploy-dev.outputs.image }}
jobs:
  deploy-dev:
    permissions:
      contents: write
      id-token: write
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    environment: ${{ inputs.CLUSTER }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v2
        name: Set up Docker Buildx
      - name: Setup java
        if: ${{ inputs.LANGUAGE == 'java' }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.JAVA_DISTRIBUTION }}
          java-version: ${{ inputs.JAVA_VERSION }}
          cache: ${{ inputs.BUILD_CACHE }}
      - name: Setup Node
        if: ${{ inputs.LANGUAGE == 'node' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: ${{ inputs.BUILD_CACHE }}
      - name: Build and test
        run: |
          ${{ inputs.BUILD_SCRIPT }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        env:
          OPTIONAL_SECRET: ${{ secrets.OPTIONAL_SECRET }}
      - name: Pre-deploy
        uses: navikt/pam-deploy/actions/pre-deploy@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          TEAM: ${{ inputs.TEAM }}
          IMAGE_SUFFIX: ${{ inputs.IMAGE_SUFFIX }}
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: ${{ inputs.TEAM }}
          tag: ${{ env.VERSION_TAG }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: "${{ inputs.WORKING_DIRECTORY }}Dockerfile"
          image_suffix: ${{ inputs.IMAGE_SUFFIX }}
          build_args: |
            "VERSION_TAG=${{ env.VERSION_TAG }}"
          build_secrets: |
            "optional_secret=${{ secrets.OPTIONAL_SECRET }}"
      - name: Deploy to ${{ inputs.CLUSTER }}
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.CLUSTER }}
          RESOURCE: ${{ inputs.NAIS_RESOURCE }}
          VARS: ${{ inputs.NAIS_VARS }}
      - name: Post-deploy
        uses: navikt/pam-deploy/actions/post-deploy@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Draft release
        if: ${{ !inputs.SKIP_DRAFT_RELEASE }}
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.VERSION_TAG }}
          name: ${{ env.DRAFT_NAME }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
  CodeQL:
    if: ${{ inputs.CODEQL_ENABLED }}
    uses: navikt/pam-deploy/.github/workflows/codeql.yml@v5
    with:
      LANGUAGE: ${{ inputs.LANGUAGE }}
      JAVA_DISTRIBUTION: ${{ inputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ inputs.JAVA_VERSION }}
      NODE_VERSION: ${{ inputs.NODE_VERSION }}
      BUILD_CACHE: ${{ inputs.BUILD_CACHE }}
      BUILD_SCRIPT: ${{ inputs.BUILD_SCRIPT }}
      WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
      IMAGE_SUFFIX: ${{ inputs.IMAGE_SUFFIX }}
    secrets:
      OPTIONAL_SECRET: ${{ secrets.OPTIONAL_SECRET }}
